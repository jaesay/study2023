example:
  comment: I AM THE DEFAULT

spring:
  jpa:
    hibernate.ddl-auto: none
    database: POSTGRESQL
    show-sql: true
    hibernate.naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties.hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    platform: postgres
    testWhileIdle: true
    validationQuery: SELECT 1
  database:
    driverClassName: org.postgresql.Driver

management:
  endpoints:
    web.exposure.include: "*"
    enabled-by-default: true

eureka:
  instance:
    preferIpAddress: true # 서비스 이름 대신 서비스 IP 주소 등록
  client:
    registerWithEureka: true # 유레카 서비스 등록 여부
    fetchRegistry: true # 레지스트리 사본을 로컬에 내려받기
    serviceUrl.defaultZone: http://eurekaserver:8070/eureka/ # 유레카 서비스의 위치 설정

spring.cloud.stream:
  bindings.inboundOrgChanges:
    destination: orgChangeTopic # 입력(input) 채널을 orgChangeTopic 큐에 매핑한다.
    content-type: application/json # 송수신할 메시지 타입을 제공한다. (이 경우 JSON 이다.)
    group: licensingGroup # 서비스 별로 한 번에 처리(process-once semantics)하려고 이 group 프로퍼티를 사용한다.
  kafka.binder:
    # 이 프로퍼티들은 카프카와 주키퍼의 네트워크 위치를 제공한다.
    zkNodes: kafka
    brokers: kafka

spring.redis:
  host: redis
  port: 6379