spring:
  application:
    name: licensing-service
  profiles:
    active: dev
  config:
    import: configserver:http://configserver:8071
#  config:
#    import: "configserver:"
#  cloud:
#    config:
#      uri: http://configserver:8071

resilience4j.circuitbreaker:
    instances:
      licenseService: # 라이선싱 서비스의 인스턴스 구성(회로 차단기 애너테이션에 전달되는 이름과 동일)
        register-health-indicator: true # 상태 정보 엔드포인트에 대한 구성 정보 노출 여부를 설정한다.
        sliding-window-size: 5 # 서킷 브레이커가 닫힌 상태일 때 호출 결과를 기록할 슬라이딩 윈도우 크기를 설정한다.
        sliding-window-type: COUNT_BASED # 서킷 브레이커가 닫힌 상태일 때 호출 결과를 기록할 슬라이딩 윈도우 타입을 설정한다.
        permitted-number-of-calls-in-half-open-state: 3 # 서킷 브레이커가 반열린 상태일 때 링 비트 버퍼의 크기를 설정한다.
        wait-duration-in-open-state: 10s # 열린 상태의 대기 시간을 설정한다.
        failure-rate-threshold: 10 # 실패율 임계치를 백분율(%)로 설정한다.
        record-exceptions: # 실패로 기록될 예외를 설정한다.
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException

      organizationService:
        register-health-indicator: true
        sliding-window-size: 2
        sliding-window-type: COUNT_BASED
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 10

#resilience4j.bulkhead:
#  instances:
#    bulkheadLicenseService:
#      maxWaitDuration: 10ms
#      maxConcurrentCalls: 20

resilience4j.thread-pool-bulkhead:
  configs:
    default:
      maxThreadPoolSize: 4
      coreThreadPoolSize: 2
      queueCapacity: 2
  instances:
#    backendA:
#      baseConfig: default
    bulkheadLicenseService:
      maxThreadPoolSize: 1
      coreThreadPoolSize: 1
      queueCapacity: 1
#      keep-alive-duration: 20ms
#      writableStackTraceEnabled: true


resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 100
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.util.concurrent.TimeoutException
        - java.io.IOException
  instances:
    retryLicenseService:
      max-attempts: 5
      wait-duration: 10000
      retry-exceptions:
        - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
  configs:
    default:
      registerHealthIndicator: false
      limitForPeriod: 10
      limitRefreshPeriod: 1s
      timeoutDuration: 0
      eventConsumerBufferSize: 100
    licenseService:
      timeoutDuration: 1s # 스레드가 허용을 기다리는 시간을 정의한다.
      limitRefreshPeriod: 500ms # 갱신 제한 기간을 정의한다.
      limitForPeriod: 5 # 갱신 제한 기간 동안 가용한 허용 수를 정의한다.
