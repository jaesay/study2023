openapi: 3.0.1
info:
  title: User API
  description: User API Documentation
  version: "1.0"
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: user
  description: the user API
paths:
  /users/{username}:
    get:
      tags:
      - user
      summary: Get user by user name
      operationId: getUser
      parameters:
      - name: username
        in: path
        description: 'The name that needs to be fetched. Use user1 for testing. '
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
    put:
      tags:
      - user
      summary: Update user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
      - name: username
        in: path
        description: name that need to be deleted
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        default:
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
      - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
      - name: username
        in: path
        description: The name that needs to be deleted
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Invalid username supplied
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: User not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /users:
    post:
      tags:
      - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    User:
      title: User
      type: object
      properties:
        id:
          type: integer
          description: id
          format: int64
          example: 10
        username:
          type: string
          description: username
          example: theUser
        firstName:
          type: string
          description: firstName
          example: John
        lastName:
          type: string
          description: lastName
          example: James
        email:
          type: string
          description: email
          example: john@email.com
        password:
          type: string
          description: password
          example: "12345"
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
